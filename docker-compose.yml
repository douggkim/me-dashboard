version: '3'
x-project-labels: &project-labels
  project: "me-dashboard"
services:
  dagsterdb:
    image: postgres
    container_name: dagsterdb
    environment:
      POSTGRES_USER: dagster
      POSTGRES_PASSWORD: p4ssw0rd
      POSTGRES_DB: dagster
    ports:
      - "5432:5432"
    volumes:
      - ./data/postgres/data:/var/lib/postgresql/data
    labels:
      <<: *project-labels
  dagster:
    container_name: dagster
    build:
      context: .
    env_file:
      - .env
    ports:
      - "3000:3000"
    volumes:
      - ./:/app
      - /etc/pki/:/etc/pki/
      - dagster_venv:/app/.venv
    depends_on:
      - dagsterdb
    labels:
      <<: *project-labels
  minio:
    profiles: ["dev"]
    container_name: doug-dashboard-minio
    image: minio/minio
    ports:
      - "9000:9000"  # API port
      - "9001:9001"  # Console port
    volumes:
      - ./data/minio:/data
    env_file:
      - .env
    entrypoint:
      - /bin/sh
      - -c
      - |
        # Start Minio server in the background
        minio server /data --console-address ":9001" &
        
        # Wait for Minio to be ready (same as your healthcheck)
        echo "Waiting for Minio to start..."
        until curl --silent --fail http://localhost:9000/minio/health/live; do
          echo "Waiting for Minio to be ready..."
          sleep 1
        done
        echo "Minio is up and running!"
        
        # Create the me-dashboard bucket if it doesn't exist
        echo "Setting up Minio client..."
        mc alias set local http://localhost:9000 "$MINIO_ROOT_USER" "$MINIO_ROOT_PASSWORD"
        echo "Creating me-dashboard bucket (if it doesn't exist)..."
        mc mb local/me-dashboard --ignore-existing
        echo "Bucket setup complete!"
        
        # Keep the container running by waiting for the background process
        wait
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 5s
      timeout: 5s
      retries: 3
    labels:
      <<: *project-labels
volumes:
  dagster_venv: