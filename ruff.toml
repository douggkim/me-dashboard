line-length = 120
preview = true

[lint]
select = ["ALL"]
fixable = ["ALL"]
extend-ignore = [
    "B008",    # Use of function call in argument default value; required for FastAPI Depends
    "TID252",  # Prefer absolute imports over relative imports from parent modules    
    "FA",      # Missing from future import annotations
    "ANN003",  # Missing type annotation for **kwargs
    "C408",    # Unnecessary call to collection function (e.g., dict()) instead of literal (e.g., {})
    "FBT001",  # Boolean function argument 
    "FBT002",  # Default value of argument is boolean 
    "DTZ003",  # The use of datetime.utcnow() is not allowed, use datetime.now(tz=) instead.
    "INP001",  # Module is part of an implicit namespace, add an explicity init.py
    "S101",    # Use of assert detected
    "G004",    # Logging statement uses f-string
    "ANN401",  # Disallow the use of typing.Any
    "PTH123",  # Built-in open() should be replaced with pathlib.Path.open()
    "TRY301",  # Raise statement occurs within a broader try block
    "EM101",   # Cannot use a string literal while raising an exception
    "TRY003",  # Don't provide long descriptions when raising an exception. Put them in a custom subclass instead.
    "COM812",  # Trailing comma missing. This is handled by the formatter.
    "TRY300",  # Consider moving this statement to an else block
    "EM102",   # f-string must not be used raw in an exception message. Store it in a variable first.
    "CPY001",  # Missing copyright notice at top of file
    "PLW3201", # Bad or misspelled dunder method name __get_pydantic_core_schema__
    "PLC1901", # var == "" can be simplified to not var as "" is falsey
    "PLR6301", # Method could be a function, class method, or static method
    "PLR0904", # Class contains too many public methods
    "PLR2004", # Magic value used in comparison, consider replacing with a constant variable
    "DOC502",  # Documented exception is not explicitly raise; Disabled as this rule seems buggy
    "PT028",   # Default parameter for unit test function
]

[lint.pylint]
max-returns = 10

[lint.flake8-pytest-style]
fixture-parentheses = false
mark-parentheses = false

[lint.flake8-annotations]
mypy-init-return = true

[lint.pydocstyle]
convention = "numpy"